C51 COMPILER V9.53.0.0   EFM8LB12_UART                                                     10/09/2019 13:50:24 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE EFM8LB12_UART
OBJECT MODULE PLACED IN .\src\Efm8lb12_uart.OBJ
COMPILER INVOKED BY: c:\SiliconLabs\SimplicityStudio\v3\developer\toolchains\keil_8051\9.53\BIN\C51.exe D:\Work Project\
                    -SingleChipWorkSpaveNew\C51_UBOOT\src\Efm8lb12_uart.c OMF2 LARGE DEBUG OBJECTEXTEND ROM(LARGE) WARNINGLEVEL(2) FLOATFUZZY
                    -(3) OPTIMIZE(9,SPEED) DEFINE(NDEBUG=1) INTVECTOR(0X0000) INTPROMOTE INCDIR(D:/Work Project/SingleChipWorkSpaveNew/C51_UB
                    -OOT/inc;D:/Work Project/SingleChipWorkSpaveNew/C51_UBOOT/mcu_sal_lib;C:/SiliconLabs/SimplicityStudio/v3/developer/sdks/s
                    -i8051/v3//Device/shared/si8051Base;C:/SiliconLabs/SimplicityStudio/v3/developer/sdks/si8051/v3//Device/EFM8LB1;C:/Silico
                    -nLabs/SimplicityStudio/v3/developer/sdks/si8051/v3//Device/EFM8LB1/inc;C:/SiliconLabs/SimplicityStudio/v3/developer/sdks
                    -/si8051/v3//Lib/efm8_assert;C:/SiliconLabs/SimplicityStudio/v3/developer/sdks/si8051/v3//Device/EFM8LB1/peripheral_drive
                    -r/inc) REGFILE(C51_UBOOT.ORC) PRINT(.\src\Efm8lb12_uart.lst) COND PAGEWIDTH(120) PAGELENGTH(65) OBJECT(.\src\Efm8lb12_ua
                    -rt.OBJ)

line level    source

   1          #include "mcu_sal.h"
   2          
   3          volatile uint8_t  busy = 0;        //because busy is used by UART0 interrupt handle function and main loop,dec
             -lare variable by "volatile" keywords
   4          
   5          static void _uart_clock_select(void)  //Timer1 is used for uart0 clock source
   6          {
   7   1              lib_uart_timer_init(TH1);                                   // initial Timer1
   8   1      }
   9          
  10          static void _uart_dev_init (void)
  11          {
  12   1              uint8_t SFRPAGE_SAVE = SFRPAGE;
  13   1      
  14   1              SFRPAGE = 0x0;
  15   1      
  16   1              XBR0 |= XBR0_URT0E__ENABLED;            //enable UART0 I/O
  17   1      
  18   1              SCON0    |= 0x10;                  //Mode0:8-bit UART with Variable Baud Rate(bit7);
  19   1                                                                                 //Logic level of stop bit is ignored(bit5);
  20   1                                                                                 //Receive Enable(bit4);
  21   1                                                                                 //Clear Transmit Interrupt Flag(bit1);Clear Receive Interrupt Flag(bit0)
  22   1      
  23   1              #if (SYSCLK/UART_BAUDRATE/2/256 < 1)
                      {
                              TH1 = 256-(SYSCLK/UART_BAUDRATE/2);
                              CKCON0 &= ~0x0B;                                        // T1M = 1; SCA1:0 = xx
                              CKCON0 |=  0x08;                                                                //Timer1 use the system clock
                      }
                      #elif (SYSCLK/UART_BAUDRATE/2/256 < 4)
  30   1              {
  31   2                      TH1 = 256-(SYSCLK/UART_BAUDRATE/2/4);
  32   2                      CKCON0 &= ~0x0B;                                        // T1M = 0; SCA1:0 = 01
  33   2                      CKCON0 |=  0x01;                                                                //Timer1 user System clock divided by 4
  34   2              }
  35   1              #elif (SYSCLK/UART_BAUDRATE/2/256 < 12)
                      {
                              TH1 = 256-(SYSCLK/UART_BAUDRATE/2/12);
                              CKCON0 &= ~0x0B;                                        // T1M = 0; SCA1:0 = 00,if SYSCLK = 24.5MHZ,UART_BAUDRATE = 9600 kb
             -sp,so choose this
                              CKCON0 |= 0x00;                                                         //Timer1 user System clock divided by 12
                      }
                      #elif
                      {
                              TH1 = 256-(SYSCLK/UART_BAUDRATE/2/48);
                              CKCON0 &= ~0x0B;                                        // T1M = 0; SCA1:0 = 10
                              CKCON0 |=  0x02;                                                                //Timer1 user System clock divided by 48
                      }
C51 COMPILER V9.53.0.0   EFM8LB12_UART                                                     10/09/2019 13:50:24 PAGE 2   

                      #endif
  48   1      
  49   1              SCON0_TI  = 0;                      // Indicate TX0 ready
  50   1      
  51   1              IP       |= 0x10;                                   // Make UART high priority3,priority3 is the highest priority!
  52   1      
  53   1              SFRPAGE   = 0x10;
  54   1              IPH      |= 0x10;
  55   1              IE       |= 0x10;                   // Enable UART0 interrupts
  56   1      
  57   1              SFRPAGE = SFRPAGE_SAVE;
  58   1      }
  59          
  60          void uart_init(void)
  61          {
  62   1              _uart_dev_init();
  63   1              _uart_clock_select();
  64   1      }
  65          
  66          
  67          void uart_putchar(char ch)
  68          {
  69   1              if (MY_GET_BIT(XBR0, 0) == 0)  //if uart is disable
  70   1              {
  71   2                      return;
  72   2              }
  73   1      
  74   1              while(busy);
  75   1              busy = 1;
  76   1              SBUF0 = ch;
  77   1      }
  78          
  79          /*
  80           * 因为在初始化的过程中并且全局中断未打开之前，有可能需要打印信息
  81           * 例如检测SDA和SCL的电平状态等等，所以这里在输出信息之前，先将
  82           * 全局中断打开
  83           */
  84          void uart_put_string(uint8_t *str)
  85          {
  86   1              bit EA_SAVE = IE_EA;
  87   1      
  88   1              IE_EA = 1;
  89   1              if (str == NULL)
  90   1                      return ;
  91   1      
  92   1              while(*str)
  93   1              {
  94   2                      uart_putchar(*str);
  95   2                      str++;
  96   2              }
  97   1              IE_EA = EA_SAVE;
  98   1      }
  99          
 100          /*
 101           * 因为在初始化的过程中并且全局中断未打开之前，有可能需要打印信息
 102           * 例如检测SDA和SCL的电平状态等等，所以这里在输出信息之前，先将
 103           * 全局中断打开
 104           */
 105          void uart_printf(uint8_t *fmt,...)
 106          {
 107   1          uint8_t string[255];
 108   1          va_list ap;
 109   1      
C51 COMPILER V9.53.0.0   EFM8LB12_UART                                                     10/09/2019 13:50:24 PAGE 3   

 110   1          va_start(ap,fmt);                   //获得第一个实际参数的起始地址
 111   1          vsprintf(string,fmt,ap);    //其实这个函数才是核心函数
 112   1          uart_put_string(string);
 113   1          va_end(ap);                         //将ap赋值为NULL
 114   1      }
 115          
 116          
 117          SI_INTERRUPT(UART0_ISR, UART0_IRQn)
 118          {
 119   1              if (SCON0_RI == 1)               // Receive
 120   1              {
 121   2                      uint8_t recv = SBUF0;
 122   2                      terminal_recv_chars(&recv, 1);
 123   2                      SCON0_RI = 0;                    // Clear interrupt flag
 124   2              }
 125   1      
 126   1              if(SCON0_TI == 1)
 127   1              {
 128   2                      SCON0_TI  = 0;
 129   2                      busy = 0;
 130   2              }
 131   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    308    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      1     305
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       1
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
