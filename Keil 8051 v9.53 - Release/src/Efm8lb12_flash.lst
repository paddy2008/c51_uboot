C51 COMPILER V9.53.0.0   EFM8LB12_FLASH                                                    10/09/2019 13:50:17 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE EFM8LB12_FLASH
OBJECT MODULE PLACED IN .\src\Efm8lb12_flash.OBJ
COMPILER INVOKED BY: c:\SiliconLabs\SimplicityStudio\v3\developer\toolchains\keil_8051\9.53\BIN\C51.exe D:\Work Project\
                    -SingleChipWorkSpaveNew\C51_UBOOT\src\Efm8lb12_flash.c OMF2 LARGE DEBUG OBJECTEXTEND ROM(LARGE) WARNINGLEVEL(2) FLOATFUZZ
                    -Y(3) OPTIMIZE(9,SPEED) DEFINE(NDEBUG=1) INTVECTOR(0X0000) INTPROMOTE INCDIR(D:/Work Project/SingleChipWorkSpaveNew/C51_U
                    -BOOT/inc;D:/Work Project/SingleChipWorkSpaveNew/C51_UBOOT/mcu_sal_lib;C:/SiliconLabs/SimplicityStudio/v3/developer/sdks/
                    -si8051/v3//Device/shared/si8051Base;C:/SiliconLabs/SimplicityStudio/v3/developer/sdks/si8051/v3//Device/EFM8LB1;C:/Silic
                    -onLabs/SimplicityStudio/v3/developer/sdks/si8051/v3//Device/EFM8LB1/inc;C:/SiliconLabs/SimplicityStudio/v3/developer/sdk
                    -s/si8051/v3//Lib/efm8_assert;C:/SiliconLabs/SimplicityStudio/v3/developer/sdks/si8051/v3//Device/EFM8LB1/peripheral_driv
                    -er/inc) REGFILE(C51_UBOOT.ORC) PRINT(.\src\Efm8lb12_flash.lst) COND PAGEWIDTH(120) PAGELENGTH(65) OBJECT(.\src\Efm8lb12_
                    -flash.OBJ)

line level    source

   1          #include "mcu_sal.h"
   2          
   3          void flash_hw_erase_page (uint16_t addr)
   4          {
   5   1         bit EA_SAVE = IE_EA;                // Preserve IE_EA
   6   1      
   7   1         uint8_t xdata * data pwrite;           // Flash write pointer
   8   1      
   9   1         uint8_t i = 0;
  10   1      
  11   1         IE_EA = 0;                          // Disable interrupts
  12   1      
  13   1         VDM0CN = 0x80;                      // Enable VDD monitor
  14   1      
  15   1         RSTSRC = 0x02;                      // Enable VDD monitor as a reset source
  16   1      
  17   1         pwrite = (uint8_t xdata *) addr;
  18   1      
  19   1         FLKEY  = 0xA5;                      // Key Sequence 1
  20   1         FLKEY  = 0xF1;                      // Key Sequence 2
  21   1         PSCTL |= 0x03;                      // PSWE = 1; PSEE = 1
  22   1      
  23   1         VDM0CN = 0x80;                      // Enable VDD monitor
  24   1      
  25   1         RSTSRC = 0x02;                      // Enable VDD monitor as a reset source
  26   1         *pwrite = 0;                        // Initiate page erase
  27   1      
  28   1         PSCTL &= ~0x03;                     // PSWE = 0; PSEE = 0
  29   1      
  30   1         IE_EA = EA_SAVE;                    // Restore interrupts
  31   1      }
  32          
  33          void flash_hw_write_byte (uint16_t addr, uint8_t byte)
  34          {
  35   1         bit  EA_SAVE = IE_EA;                // Preserve IE_EA
  36   1         uint8_t xdata * data pwrite;        // Flash write pointer
  37   1      
  38   1         IE_EA = 0;                          // Disable interrupts
  39   1      
  40   1         VDM0CN = 0x80;                      // Enable VDD monitor
  41   1      
  42   1         RSTSRC = 0x02;                      // Enable VDD monitor as a reset source
  43   1      
  44   1         pwrite = (uint8_t xdata *) addr;
  45   1      
  46   1         FLKEY  = 0xA5;                      // Key Sequence 1
  47   1         FLKEY  = 0xF1;                      // Key Sequence 2
  48   1         PSCTL |= 0x01;                      // PSWE = 1 which enables writes
C51 COMPILER V9.53.0.0   EFM8LB12_FLASH                                                    10/09/2019 13:50:17 PAGE 2   

  49   1      
  50   1         VDM0CN = 0x80;                      // Enable VDD monitor
  51   1      
  52   1         RSTSRC = 0x02;                      // Enable VDD monitor as a reset source
  53   1         *pwrite = byte;                     // Write the byte
  54   1      
  55   1         PSCTL &= ~0x01;                     // PSWE = 0 which disable writes
  56   1      
  57   1         IE_EA = EA_SAVE;                    // Restore interrupts
  58   1      }
  59          
  60          
  61          uint8_t flash_hw_read_byte (uint16_t addr)
  62          {
  63   1         bit EA_SAVE = IE_EA;                // Preserve IE_EA
  64   1      
  65   1         uint8_t code * data pread;          // Flash read pointer
  66   1         uint8_t byte;
  67   1      
  68   1         IE_EA = 0;                          // Disable interrupts
  69   1      
  70   1         pread = (uint8_t code *) addr;
  71   1      
  72   1         byte = *pread;                      // Read the byte
  73   1      
  74   1         IE_EA = EA_SAVE;                    // Restore interrupts
  75   1      
  76   1         return byte;
  77   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    113    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----       1
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       6
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       3
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
