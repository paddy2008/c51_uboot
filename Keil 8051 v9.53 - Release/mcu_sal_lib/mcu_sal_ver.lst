C51 COMPILER V9.53.0.0   MCU_SAL_VER                                                       10/09/2019 13:50:45 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE MCU_SAL_VER
OBJECT MODULE PLACED IN .\mcu_sal_lib\mcu_sal_ver.OBJ
COMPILER INVOKED BY: c:\SiliconLabs\SimplicityStudio\v3\developer\toolchains\keil_8051\9.53\BIN\C51.exe D:\Work Project\
                    -SingleChipWorkSpaveNew\C51_UBOOT\mcu_sal_lib\mcu_sal_ver.c OMF2 LARGE DEBUG OBJECTEXTEND ROM(LARGE) WARNINGLEVEL(2) FLOA
                    -TFUZZY(3) OPTIMIZE(9,SPEED) DEFINE(NDEBUG=1) INTVECTOR(0X0000) INTPROMOTE INCDIR(D:/Work Project/SingleChipWorkSpaveNew/
                    -C51_UBOOT/inc;D:/Work Project/SingleChipWorkSpaveNew/C51_UBOOT/mcu_sal_lib;C:/SiliconLabs/SimplicityStudio/v3/developer/
                    -sdks/si8051/v3//Device/shared/si8051Base;C:/SiliconLabs/SimplicityStudio/v3/developer/sdks/si8051/v3//Device/EFM8LB1;C:/
                    -SiliconLabs/SimplicityStudio/v3/developer/sdks/si8051/v3//Device/EFM8LB1/inc;C:/SiliconLabs/SimplicityStudio/v3/develope
                    -r/sdks/si8051/v3//Lib/efm8_assert;C:/SiliconLabs/SimplicityStudio/v3/developer/sdks/si8051/v3//Device/EFM8LB1/peripheral
                    -_driver/inc) REGFILE(C51_UBOOT.ORC) PRINT(.\mcu_sal_lib\mcu_sal_ver.lst) COND PAGEWIDTH(120) PAGELENGTH(65) OBJECT(.\mcu
                    -_sal_lib\mcu_sal_ver.OBJ)

line level    source

   1          #include "mcu_sal_ver.h"
   2          
   3          static uint8_t _ver_get_year(const char *date)
   4          {
   5   1              uint8_t ret;
   6   1              char *s = strrchr(date, ' ');
   7   1      
   8   1              ret = (uint8_t)atoi((char *)(s+3));
   9   1              return ret;
  10   1      }
  11          
  12          static uint8_t _ver_get_month(const char *date)
  13          {
  14   1              if (strncmp(date, "Jan", 3) == 0)
  15   1                      return 1;
  16   1              else if(strncmp(date, "Feb", 3) == 0)
  17   1                      return 2;
  18   1              else if(strncmp(date, "Mar", 3) == 0)
  19   1                      return 3;
  20   1              else if(strncmp(date, "Apr", 3) == 0)
  21   1                      return 4;
  22   1              else if(strncmp(date, "May", 3) == 0)
  23   1                      return 5;
  24   1              else if(strncmp(date, "Jun", 3) == 0)
  25   1                      return 6;
  26   1              else if(strncmp(date, "Jul", 3) == 0)
  27   1                      return 7;
  28   1              else if(strncmp(date, "Aug", 3) == 0)
  29   1                      return 8;
  30   1              else if(strncmp(date, "Sep", 3) == 0)
  31   1                      return 9;
  32   1              else if(strncmp(date, "Oct", 3) == 0)
  33   1                      return 10;
  34   1              else if(strncmp(date, "Nov", 3) == 0)
  35   1                      return 11;
  36   1              else if(strncmp(date, "Dec", 3) == 0)
  37   1                      return 12;
  38   1              else
  39   1                      return 0;
  40   1      }
  41          
  42          static uint8_t _ver_get_day(const char *date)
  43          {
  44   1              uint8_t ret;
  45   1              char    _day[3] = {0};
  46   1              char *s = strchr(date, ' ');
  47   1      
  48   1              strncpy(_day, s+1, 2);
C51 COMPILER V9.53.0.0   MCU_SAL_VER                                                       10/09/2019 13:50:45 PAGE 2   

  49   1              ret = (uint8_t)atoi(_day);
  50   1              return ret;
  51   1      }
  52          
  53          /*
  54           * time: 13:13:30
  55           */
  56          static uint8_t _ver_get_hour(const char *time)
  57          {
  58   1              uint8_t ret;
  59   1              char    _h[3] = {0};
  60   1              char *s = time; // strrchr(time, ' ');
  61   1      
  62   1              strncpy(_h, s, 2);
  63   1              ret = (uint8_t)atoi(_h);
  64   1              return ret;
  65   1      }
  66          
  67          static uint8_t _ver_get_minute(const char *time)
  68          {
  69   1              uint8_t ret;
  70   1              char    _m[3] = {0};
  71   1              char *s = strchr(time, ':');
  72   1      
  73   1              strncpy(_m, s+1, 2);
  74   1              ret = (uint8_t)atoi(_m);
  75   1              return ret;
  76   1      }
  77          
  78          static uint8_t _ver_get_second(const char *time)
  79          {
  80   1              uint8_t ret;
  81   1              char    _s[3] = {0};
  82   1              char *s = strrchr(time, ':');
  83   1      
  84   1              strncpy(_s, s+1, 2);
  85   1              ret = (uint8_t)atoi(_s);
  86   1      
  87   1              return ret;
  88   1      }
  89          
  90          void ver_load_info(BUILD_TIME *build)
  91          {
  92   1              build->year = _ver_get_year(__DATE__);
  93   1              build->mon  = _ver_get_month(__DATE__);
  94   1              build->day  = _ver_get_day(__DATE__);
  95   1              build->hour = _ver_get_hour(__TIME__);
  96   1              build->min  = _ver_get_minute(__TIME__);
  97   1              build->sec  = _ver_get_second(__TIME__);
  98   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    733    ----
   CONSTANT SIZE    =     81    ----
   XDATA SIZE       =   ----      42
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
C51 COMPILER V9.53.0.0   MCU_SAL_VER                                                       10/09/2019 13:50:45 PAGE 3   

   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
